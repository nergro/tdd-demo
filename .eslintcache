[{"/home/nerijus/work/tdd-demo/src/index.tsx":"1","/home/nerijus/work/tdd-demo/src/App.tsx":"2","/home/nerijus/work/tdd-demo/src/Services/http.ts":"3","/home/nerijus/work/tdd-demo/src/globalStyle.ts":"4","/home/nerijus/work/tdd-demo/src/Main/Main.tsx":"5","/home/nerijus/work/tdd-demo/src/Examples/Example1.tsx":"6","/home/nerijus/work/tdd-demo/src/Examples/Example2.tsx":"7","/home/nerijus/work/tdd-demo/src/Services/getUsers.ts":"8","/home/nerijus/work/tdd-demo/src/Atoms/Button.tsx":"9","/home/nerijus/work/tdd-demo/src/Atoms/List.tsx":"10","/home/nerijus/work/tdd-demo/src/Atoms/text/index.tsx":"11","/home/nerijus/work/tdd-demo/src/Atoms/text/P.tsx":"12","/home/nerijus/work/tdd-demo/src/Atoms/text/Span.tsx":"13","/home/nerijus/work/tdd-demo/src/Atoms/text/H1.tsx":"14"},{"size":452,"mtime":1611165645874,"results":"15","hashOfConfig":"16"},{"size":599,"mtime":1611165645870,"results":"17","hashOfConfig":"16"},{"size":125,"mtime":1611165645874,"results":"18","hashOfConfig":"16"},{"size":682,"mtime":1611165645874,"results":"19","hashOfConfig":"16"},{"size":703,"mtime":1611165645874,"results":"20","hashOfConfig":"16"},{"size":1545,"mtime":1611168696448,"results":"21","hashOfConfig":"16"},{"size":1795,"mtime":1611165645870,"results":"22","hashOfConfig":"16"},{"size":194,"mtime":1611165645874,"results":"23","hashOfConfig":"16"},{"size":367,"mtime":1611165645870,"results":"24","hashOfConfig":"16"},{"size":208,"mtime":1611165645870,"results":"25","hashOfConfig":"16"},{"size":83,"mtime":1611165645870,"results":"26","hashOfConfig":"16"},{"size":95,"mtime":1611165645870,"results":"27","hashOfConfig":"16"},{"size":98,"mtime":1611165645870,"results":"28","hashOfConfig":"16"},{"size":110,"mtime":1611165645870,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"3q3rm8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/nerijus/work/tdd-demo/src/index.tsx",[],["60"],"/home/nerijus/work/tdd-demo/src/App.tsx",[],"/home/nerijus/work/tdd-demo/src/Services/http.ts",[],"/home/nerijus/work/tdd-demo/src/globalStyle.ts",[],"/home/nerijus/work/tdd-demo/src/Main/Main.tsx",[],"/home/nerijus/work/tdd-demo/src/Examples/Example1.tsx",["61"],"import React, { FC, useState, MouseEvent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Button } from \"Atoms/Button\";\nimport { H1 } from \"Atoms/text\";\nimport { List, ListItem } from \"Atoms/List\";\n\nconst Container = styled.div`\n  padding: 50px;\n`;\n\nconst Form = styled.form`\n  margin: 50px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  width: 300px;\n  height: 40px;\n  background: transparent;\n  border: 2px solid #717c91;\n  color: #ffffff;\n  padding: 5px 20px;\n  outline: none;\n`;\n\nconst SubmitButton = styled(Button)`\n  margin-top: 15px;\n  height: 40px;\n  width: 150px;\n`;\n\nexport const Example1: FC = () => {\n  const [inputTask, setInputTask] = useState<string>(\"\");\n  const [tasks, setTasks] = useState<string[]>([\n    // \"Dishes\",\n    // \"Shopping\",\n    // \"Read a book\",\n  ]);\n\n  const onSubmit = (e: MouseEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    // if (inputTask) {\n    //   setTasks([...tasks, inputTask]);\n    //   setInputTask(\"\");\n    // }\n  };\n  return (\n    <Container>\n      <H1>Todo tasks</H1>\n      <Form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          alt=\"task input\"\n          onChange={(e) => setInputTask(e.target.value)}\n          value={inputTask}\n        />\n        <SubmitButton type=\"submit\">Submit</SubmitButton>\n      </Form>\n      <List>\n        {tasks.map((x) => (\n          <ListItem key={x}>{x}</ListItem>\n        ))}\n      </List>\n    </Container>\n  );\n};\n","/home/nerijus/work/tdd-demo/src/Examples/Example2.tsx",[],"/home/nerijus/work/tdd-demo/src/Services/getUsers.ts",[],"/home/nerijus/work/tdd-demo/src/Atoms/Button.tsx",[],"/home/nerijus/work/tdd-demo/src/Atoms/List.tsx",[],"/home/nerijus/work/tdd-demo/src/Atoms/text/index.tsx",[],"/home/nerijus/work/tdd-demo/src/Atoms/text/P.tsx",[],"/home/nerijus/work/tdd-demo/src/Atoms/text/Span.tsx",[],"/home/nerijus/work/tdd-demo/src/Atoms/text/H1.tsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":36,"column":17,"nodeType":"66","messageId":"67","endLine":36,"endColumn":25},"jsx-a11y/accessible-emoji",[],"@typescript-eslint/no-unused-vars","'setTasks' is assigned a value but never used. Allowed unused vars must match /^_ignore/u.","Identifier","unusedVar"]